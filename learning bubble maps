Learning bubble maps https://bost.ocks.org/mike/bubble-map/
basically:
acquiring data from primary sources
transforming data into display-appropriate representation
displaying data  

US Census bureau posts simplified cartographic boundaries as .shp
also puts TIGER/Line .shp that are just better

Using "20m" lowest-res .shp 1:20,000,000 scale. 


build/gz_2010_us_050_00_20m.zip:
	mkdir -p $(dir $@)
	curl -o $@ http://www2.census.gov/geo/tiger/GENZ2010/$(notdir $@)

"place this in a new .txt file and name it 'Makefile'"


make build/gz_2010_us_050_00_20m.zip

"make the things you need and makes and puts it in the build directory
You do not git build files because they are created as needed"


build/gz_2010_us_050_00_20m.shp: build/gz_2010_us_050_00_20m.zip
	unzip -od $(dir $@) $<
	touch $@

"This unzips the file in build"


build/counties.json: build/gz_2010_us_050_00_20m.shp
	node_modules/.bin/topojson \
		-o $@ \
		--projection='width = 960, height = 600, d3.geo.albersUsa() \
			.scale(1280) \
			.translate([width / 2, height / 2])' \
		--simplify=.5 \
		-- counties=$<


"Converts the .shp to Topojson and also quantizes, projects and simplifies to the 
Albers USA projection, but doesn't do it too well so do this instead"


wget https://d3js.org/us-10m.v1.json

"remove original counties.json Rename us-10m.vi.json counties.json"


"d3.geo.path.projection(null) is null becuase topojson was already projected"
"The path used topojson.mesh() to adjust the data just to display boundaries"


"Next you have to download a CSV to see the data you want 
to visualize"


    Go to factfinder2.census.gov.
    Find where it says “American Community Survey” and click “get data »”.
    Click the blue “Geographies” button on the left.
    In the pop-up, select “..... County - 050” in the “geographic type” menu.
    Select “All Counties within United States” in the “geographic areas” box.
    Click the “ADD TO YOUR SELECTIONS” button.
    Click “CLOSE” to dismiss the pop-up.
    Click the blue “Topics” button on the left.
    In the pop-up, expand the “People” submenu.
    Expand the “Basic Count/Estimate” submenu.
    Click “Population Total”.
    Click “CLOSE” to dismiss the pop-up.
    In the table, click on the most recent ACS 5-year estimate named “TOTAL POPULATION”.
    On the next page, click the “Download” link under “Actions”.
    In the pop-up, click “OK”.
    Wait for it to “build” your file.
    When it’s ready, click “DOWNLOAD”.
    Finally, expand the downloaded zip file (ACS_12_5YR_B01003.zip). 


build/counties.json: build/gz_2010_us_050_00_20m.shp ACS_12_5YR_B01003_with_ann.csv
	node_modules/.bin/topojson \
		-o $@ \
		--id-property='STATE+COUNTY,Id2' \
		--external-properties=ACS_12_5YR_B01003_with_ann.csv \
		--properties='name=Geography' \
		--properties='population=+d.properties["Estimate; Total"]' \
		--projection='width = 960, height = 600, d3.geo.albersUsa() \
			.scale(1280) \
			.translate([width / 2, height / 2])' \
		--simplify=.5 \
		--counties=$

"Use Topojson --external-properties to join shapefile with CSV population estimates
using ID property as primary key"
"When two files do not use same ID property name use --id-property"
"Use javascript to add additional expressions"


build/states.json: build/counties.json
	node_modules/topojson/bin/topojson-merge \
		-o $@ \
		--in-object=counties \
		--out-object=states \
		--key='d.id.substring(0, 2)' \
		-- $<

"When dealing with topojson files that already have state borders outlined"
"Got topojson properly into node_modules, idk how to see what is going
on", probably something wrong w/ us.min. 10min.js file that is where you left off


















